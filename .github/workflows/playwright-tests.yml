name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  # schedule:
  #   - cron: '0 0 * * *'  # Runs at midnight UTC every day

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        npx playwright install --with-deps

    - name: Install Allure CommandLine
      run: |
        curl -o allure-2.24.1.tgz -OL https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.24.1/allure-commandline-2.24.1.tgz
        tar -zxvf allure-2.24.1.tgz -C /tmp
        sudo ln -s /tmp/allure-2.24.1/bin/allure /usr/local/bin/allure

    - name: Run Playwright tests
      run: npm run test
      env:
        CI: true
      
    - name: Generate Allure Report
      if: always()
      run: |
        allure generate allure-results -o allure-report --clean
        
    - name: Upload Playwright Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
        
    - name: Upload Allure Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report/
        retention-days: 30

    # - name: Deploy to GitHub Pages
    #   if: always()
    #   uses: peaceiris/actions-gh-pages@v3
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_dir: ./allure-report
    #     publish_branch: gh-pages

    # - name: Send Slack notification
    #   if: always()
    #   uses: 8398a7/action-slack@v3
    #   with:
    #     status: ${{ job.status }}
    #     fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
    #   env:
    #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  notify:
    needs: test
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Process Test Results
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "âœ¨ Tests completed at $(date)" >> $GITHUB_STEP_SUMMARY
          if [ -f "test-results/test-results.json" ]; then
            echo "### Results" >> $GITHUB_STEP_SUMMARY
            cat test-results/test-results.json | jq -r '"- Total: \(.stats.total)\n- Passed: \(.stats.passed)\n- Failed: \(.stats.failed)\n- Skipped: \(.stats.skipped)"' >> $GITHUB_STEP_SUMMARY
          fi
